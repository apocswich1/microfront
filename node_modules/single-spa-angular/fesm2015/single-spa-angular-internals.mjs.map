{"version":3,"file":"single-spa-angular-internals.mjs","sources":["../../libs/single-spa-angular/internals/src/dom.ts","../../libs/single-spa-angular/internals/src/single-spa-angular-internals.ts"],"sourcesContent":["import { DomElementGetter, BaseSingleSpaAngularOptions } from './types';\n\n// This will be provided through Terser global definitions by Angular CLI. This will\n// help to tree-shake away the code unneeded for production bundles.\ndeclare const ngDevMode: boolean;\n\nexport function getContainerElementAndSetTemplate<T extends BaseSingleSpaAngularOptions>(\n  options: T,\n  props: any,\n): HTMLElement {\n  const domElementGetter = chooseDomElementGetter(options, props);\n\n  if ((typeof ngDevMode === 'undefined' || ngDevMode) && !domElementGetter) {\n    throw Error(\n      `Cannot mount angular application '${\n        props.name || props.appName\n      }' without a domElementGetter provided either as an opt or a prop`,\n    );\n  }\n\n  const containerElement = getContainerElement(domElementGetter, props);\n  containerElement.innerHTML = options.template;\n  return containerElement;\n}\n\nfunction getContainerElement(domElementGetter: DomElementGetter, props: any): never | HTMLElement {\n  const element = domElementGetter(props);\n\n  if ((typeof ngDevMode === 'undefined' || ngDevMode) && !element) {\n    throw Error('domElementGetter did not return a valid dom element');\n  }\n\n  return element;\n}\n\nfunction chooseDomElementGetter<T extends BaseSingleSpaAngularOptions>(\n  opts: T,\n  props: any,\n): DomElementGetter {\n  props = props?.customProps ?? props;\n\n  if (props.domElement) {\n    return () => props.domElement;\n  } else if (props.domElementGetter) {\n    return props.domElementGetter;\n  } else if (opts.domElementGetter) {\n    return opts.domElementGetter;\n  } else {\n    return defaultDomElementGetter(props.name);\n  }\n}\n\nfunction defaultDomElementGetter(name: string): DomElementGetter {\n  return function getDefaultDomElement() {\n    const id = `single-spa-application:${name}`;\n    let domElement: HTMLElement | null = document.getElementById(id);\n\n    if (!domElement) {\n      domElement = document.createElement('div');\n      domElement.id = id;\n      document.body.appendChild(domElement);\n    }\n\n    return domElement;\n  };\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"SAMgB,iCAAiC,CAC/C,OAAU,EACV,KAAU;IAEV,MAAM,gBAAgB,GAAG,sBAAsB,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;IAEhE,IAAI,CAAC,OAAO,SAAS,KAAK,WAAW,IAAI,SAAS,KAAK,CAAC,gBAAgB,EAAE;QACxE,MAAM,KAAK,CACT,qCACE,KAAK,CAAC,IAAI,IAAI,KAAK,CAAC,OACtB,kEAAkE,CACnE,CAAC;KACH;IAED,MAAM,gBAAgB,GAAG,mBAAmB,CAAC,gBAAgB,EAAE,KAAK,CAAC,CAAC;IACtE,gBAAgB,CAAC,SAAS,GAAG,OAAO,CAAC,QAAQ,CAAC;IAC9C,OAAO,gBAAgB,CAAC;AAC1B,CAAC;AAED,SAAS,mBAAmB,CAAC,gBAAkC,EAAE,KAAU;IACzE,MAAM,OAAO,GAAG,gBAAgB,CAAC,KAAK,CAAC,CAAC;IAExC,IAAI,CAAC,OAAO,SAAS,KAAK,WAAW,IAAI,SAAS,KAAK,CAAC,OAAO,EAAE;QAC/D,MAAM,KAAK,CAAC,qDAAqD,CAAC,CAAC;KACpE;IAED,OAAO,OAAO,CAAC;AACjB,CAAC;AAED,SAAS,sBAAsB,CAC7B,IAAO,EACP,KAAU;;IAEV,KAAK,GAAG,MAAA,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,WAAW,mCAAI,KAAK,CAAC;IAEpC,IAAI,KAAK,CAAC,UAAU,EAAE;QACpB,OAAO,MAAM,KAAK,CAAC,UAAU,CAAC;KAC/B;SAAM,IAAI,KAAK,CAAC,gBAAgB,EAAE;QACjC,OAAO,KAAK,CAAC,gBAAgB,CAAC;KAC/B;SAAM,IAAI,IAAI,CAAC,gBAAgB,EAAE;QAChC,OAAO,IAAI,CAAC,gBAAgB,CAAC;KAC9B;SAAM;QACL,OAAO,uBAAuB,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;KAC5C;AACH,CAAC;AAED,SAAS,uBAAuB,CAAC,IAAY;IAC3C,OAAO,SAAS,oBAAoB;QAClC,MAAM,EAAE,GAAG,0BAA0B,IAAI,EAAE,CAAC;QAC5C,IAAI,UAAU,GAAuB,QAAQ,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC;QAEjE,IAAI,CAAC,UAAU,EAAE;YACf,UAAU,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;YAC3C,UAAU,CAAC,EAAE,GAAG,EAAE,CAAC;YACnB,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;SACvC;QAED,OAAO,UAAU,CAAC;KACnB,CAAC;AACJ;;ACjEA;;;;;;"}